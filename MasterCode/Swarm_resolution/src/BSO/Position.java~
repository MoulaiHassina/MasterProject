package bso;

import environnement.Dataset;

import java.util.ArrayList;
import java.util.Random;

public class Position {

    public int X;
    public int Y;

    Position(int maxX, int minX, int maxY, int minY){
        Random random = new Random();
        X = random.nextInt(maxX + 1 - minX) + minX;
        Y = random.nextInt(maxY + 1 - minY) + minY;
    }

    Position(){
        X = 0;
        Y = 0;
    }

    Position(int x, int y){
        X = x;
        Y = y;
    }



    public boolean identic(Position position){
        if(position.Y == this.Y && position.X == this.X)
            return true;
        else
            return false;
    }



    public ArrayList<Position> getCiclePositions(Dataset env,int flip,int localSize){
        ArrayList<Position> circlePos = new ArrayList();
        Position pos;
        int d = env.size/flip;
        //System.out.println("d="+d+" bee ref="+this);
        for(int i = -d; i<=d ; i++){
            for(int j = -d; j<=d; j++){
                if((Math.abs(i) + Math.abs(j)== d) && env.valide(X+i,Y+j)
                        && env.getValue(this.X+i,this.Y+j) != -1){
                        pos = new Position(X+i,Y+j);
                        i++;j++;
                        circlePos.add(pos);
                    }
            }
        }
        return circlePos;
    }


    @Override
    public String toString() {
        return "Position("+X+" , "+Y+")";
    }


    public static void main(String[] args) {
        Dataset env = new Dataset(300,1,20);

        Position position = new Position(100,100);
        ArrayList<Position> circlePos = position.getCiclePositions(env,10,10);
        System.out.println(circlePos.size());

       // int i = 3;
       // do{
       //     System.out.println(i);
       //     i--;
       // }while(i!=0);
    }

}
